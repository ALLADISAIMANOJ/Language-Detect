# -*- coding: utf-8 -*-
"""Language Detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i39G5o3cl73qfkkIPjsGV2vNEzEiHV5Y
"""

import math
import pandas as pd

#Reading the language.csv dataset
df = pd.read_csv("https://pastebin.com/raw/gznpXL9f")
df

# Name is id_vars and Course is value_vars
df1=df.melt(id_vars =[], value_vars =['bulgarian', 'english', 'french', 'irish', 'german', 'greek', 'spanish', 'swedish', 'italian', 'portuguese'])
df1['Sentence'], df1['Language'] = df1['value'].copy(), df1['variable'].copy()
df1 = df1.drop('variable', axis=1)
df1 = df1.drop('value', axis=1)
df1

import re
import warnings
warnings.simplefilter("ignore")
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import string
from sklearn.feature_extraction.text import CountVectorizer

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
X = df1["Sentence"]
Y = df1['Language']
Y = le.fit_transform(Y)
# print(Y)
#Pre-processing
text_list = []
for text in X:
        text = re.sub(r'[!@#$(),n"%^*?:;~`0-9]', ' ', text)
        text = re.sub(r'[[]]', ' ', text)
        text = text.lower()
        text_list.append(text)

cv = CountVectorizer()
X = cv.fit_transform(text_list).toarray()
X.shape        

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2)

from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB()
model.fit(x_train, y_train)
y_prediction = model.predict(x_test)


from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
accuracy = accuracy_score(y_test, y_prediction)
confusion_m = confusion_matrix(y_test, y_prediction)
print("The accuracy is :",accuracy)
report = classification_report(y_test, y_prediction)
# print(report)


string1 = input("Enter a sentence:\n")
x =[string1]
x = cv.transform(x)
dic1 = {'0':'bulgarian','1': 'english','2': 'french', '5': 'irish', '3': 'german','4': 'greek','8': 'spanish', '9':'swedish','6': 'italian', '7': 'portuguese'}
print("The entered sentence is",dic1[str(model.predict(x)[0])])

# string1 = input("Enter a sentence")
# x =[string1]
# x = cv.transform(x)
# dic1 = {'0':'bulgarian','1': 'english','2': 'french', '5': 'irish', '3': 'german','4': 'greek','8': 'spanish', '9':'swedish','6': 'italian', '7': 'portuguese'}
# print("The entered sentence is",dic1[str(model.predict(x)[0])])